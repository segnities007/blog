package org.segnities007.blog.ui.component.bar.bottom

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalUriHandler
import androidx.compose.ui.unit.sp
import blog.composeapp.generated.resources.Res
import blog.composeapp.generated.resources.github
import blog.composeapp.generated.resources.twitter
import org.jetbrains.compose.resources.painterResource
import org.segnities007.blog.data.model.Segnities
import org.segnities007.blog.data.presentation.Values

@Composable
fun BottomBar() {
    BottomBarUi {
        Column(
            modifier = Modifier.fillMaxWidth(),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally,
        ){
            StraightLine()
            Spacer(Modifier.padding(Values.Dimensions.iconSmaller))
            Row {
                Twitter()
                Spacer(Modifier.padding(Values.Dimensions.iconNormal))
                GitHub()
            }
            Spacer(Modifier.padding(Values.Dimensions.iconSmallest))
            DescriptionOfGeneratedBy()
            Spacer(Modifier.padding(Values.Dimensions.iconSmaller))
        }
    }
}

@Composable
private fun DescriptionOfGeneratedBy(){
    val fontSize = 16.sp
    Text(
        text = "Generated By Compose Multiplatform",
        fontSize = fontSize,
        color = Color.White,
    )
}

@Composable
private fun BottomBarScope.StraightLine() {
    Box(
        modifier =
            Modifier
                .fillMaxWidth()
                .background(Color.White),
    ) {
        Spacer(Modifier.padding(Values.Dimensions.paddingSmallest))
    }
}

@Composable
private fun BottomBarUi(content: @Composable BottomBarScope.() -> Unit) {
    val scope = DefaultBottomBarScope()

    scope.content()
}

@Composable
private fun BottomBarScope.Twitter() {
    val handler = LocalUriHandler.current
    Box(
        modifier =
            Modifier.clickable {
                handler.openUri(Segnities.twitterURL)
            },
    ) {
        Image(
            modifier = Modifier.size(Values.Dimensions.iconLarge),
            painter = painterResource(Res.drawable.twitter),
            contentDescription = null,
        )
    }
}

@Composable
private fun BottomBarScope.GitHub() {
    val handler = LocalUriHandler.current
    Box(
        modifier =
            Modifier.clickable {
                handler.openUri(Segnities.gitHubURL)
            },
    ) {
        Image(
            modifier = Modifier.size(Values.Dimensions.iconLarge),
            painter = painterResource(Res.drawable.github),
            contentDescription = null,
        )
    }
}
